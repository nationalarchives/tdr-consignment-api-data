pipeline {
    agent {
        label "master"
    }
    parameters {
        choice(name: "STAGE", choices: ["intg", "staging", "prod"], description: "The stage you are building the front end for")
    }
    stages {
        stage("DB Migration") {
            parallel {
                stage("Invoke lambda") {
                    agent {
                        ecs {
                            inheritFrom "aws"
                            taskrole "arn:aws:iam::${env.MANAGEMENT_ACCOUNT}:role/TDRJenkinsNodeLambdaRole${params.STAGE.capitalize()}"
                        }
                    }
                    steps {
                        script {
                            def accountNumber = getAccountNumberFromStage()
                            sh "python3 /invoke_lambda.py ${accountNumber} ${params.STAGE} tdr-database-migrations-${params.STAGE}"
                            //slackSend color: "good", message: "*Database migrations* :arrow_up: The migration lambda has been run in *${params.STAGE}*", channel: "#tdr-releases"
                        }
                    }
                }
                stage("Deploy to s3") {
                    agent {
                        ecs {
                            inheritFrom "base"
                            taskDefinitionOverride "arn:aws:ecs:eu-west-2:${env.MANAGEMENT_ACCOUNT}:task-definition/flyway-${params.STAGE}:1"
                        }
                    }
                    steps {
                        script {
                            sshagent(['github-jenkins']) {
                                sh 'git push --set-upstream origin master'
                                sh 'git config --global user.email tna-digital-archiving-jenkins@nationalarchives.gov.uk'
                                sh 'git config --global user.name tna-digital-archiving-jenkins'
                                sh "sbt flywayMigrate slickCodegen 'release with-defaults'"
                                //slackSend color: "good", message: "*Database schema* :arrow_up: The database package has been published", channel: "#tdr-releases"
                            }
                        }
                    }
                }
            }
        }

    }
}

def getAccountNumberFromStage() {
    def stageToAccountMap = [
            "intg": env.INTG_ACCOUNT,
            "staging": env.STAGING_ACCOUNT,
            "prod": env.PROD_ACCOUNT
    ]

    return stageToAccountMap.get(params.STAGE)
}
