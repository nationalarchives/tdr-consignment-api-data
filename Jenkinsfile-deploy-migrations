library("tdr-jenkinslib")
def repo = "tdr-consignment-api-data"

pipeline {
  agent {
    label "built-in"
  }
  parameters {
    choice(name: "STAGE", choices: ["intg", "staging", "prod"], description: "The stage you are deploying the migration lambda to")
  }
  stages {
    stage("Run git secrets") {
      steps {
        script {
          tdr.runGitSecrets(repo)
        }
      }
    }
    stage("Build") {
      agent {
        ecs {
          inheritFrom "transfer-frontend"
        }
      }
      steps {
        dir("lambda/src/main/resources") {
          sh "wget https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem"
        }
        sh "sbt lambda/assembly"
        stash includes: "lambda/target/scala-2.13/db-migrations.jar", name: "db-migrations.jar"
      }
    }
    stage("Deploy lambda") {
      agent {
        ecs {
          inheritFrom "aws"
          taskrole "arn:aws:iam::${env.MANAGEMENT_ACCOUNT}:role/TDRJenkinsNodeLambdaRole${params.STAGE.capitalize()}"
        }
      }
      steps {
        script {
          unstash "db-migrations.jar"
          def accountNumber = tdr.getAccountNumberFromStage(params.STAGE)
          sh "python3 /deploy_lambda.py ${accountNumber} ${params.STAGE} tdr-database-migrations-${params.STAGE} lambda/target/scala-2.13/consignment.jar"
          tdr.postToDaTdrSlackChannel(colour: "good", message: "*Database migrations* :arrow_up: The migration lambda has been deployed to *${params.STAGE}*")
        }
      }
    }
  }
}

